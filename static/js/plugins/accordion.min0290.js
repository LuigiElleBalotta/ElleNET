(function($,win,doc,undefined){"use strict";var defaults={attrName:"data-accordion",attrGroup:"data-group",attrTarget:"data-target",attrTrigger:"data-trigger",attrTGroup:"data-trigger-group",isOpen:"is-open",isToggled:"is-toggled",close:"group",duration:350,group:"default",canCloseAll:true};var Accordion=function(element,options){this.element=element;this.options=$.extend({},defaults,options);this.initialize(this.element,this.options)};Accordion.prototype={initialize:function(element,options){var $group,$trigger,$tGroup;this.normalizeDataAttributes(element,options);$group=this.get.group(element,options);$trigger=this.get.trigger(element,options);$tGroup=this.get.tGroup(element,options,$trigger);this.set.initialToggle(element,options,$trigger);this.events.bind(options,$group,$trigger,$tGroup,this)},events:{bind:function(options,$group,$trigger,$tGroup,plugin){plugin.set.data(options,$group,$trigger,$tGroup);$(options.trigger).bind("click.accordion.toggle",function(){return plugin.toggle()})}},get:{group:function(element,options){var accordion="["+options.attrName+"]";var group="["+options.attrGroup;var groupValue="="+options.group+"]";var $group=$(group+groupValue);if($group.length<1){$group=$(accordion).not(group+"]")}return $group},trigger:function(element,options){var name=options.name;var target="["+options.attrTarget;var targetValue="="+options[name]+"]";var $trigger=$(target+targetValue);return $trigger},tGroup:function(element,options){var tGroup="["+options.attrTGroup;var groupValue="="+options.group+"]";var trigger="["+options.attrTrigger+"]";var $tGroup=$(tGroup+groupValue);if($tGroup.length<1){$tGroup=$(trigger).not(tGroup+"]")}return $tGroup}},set:{data:function(options,$group,$trigger,$tGroup){var name=options.name;var attrName="["+options.attrName;var nameValue="="+options[name]+"]";var $accordion=$(attrName+nameValue);var triggerData=$trigger.data();options.data={name:options.accordion,group:options.group,trigger:triggerData.trigger,triggerTarget:triggerData.target,triggerGroup:triggerData["trigger-group"]||"default"};options.accordion=$accordion;options.group=$group;options.trigger=$trigger;options.triggerGroup=$tGroup},initialToggle:function(element,options,$trigger){if($(element).hasClass(options.isOpen)){$trigger.addClass(options.isToggled)}else{$trigger.removeClass(options.isToggled)}}},toggle:function(){var $element=$(this.element);var options=this.options;var $group=options.group;var $trigger=options.trigger;var $tGroup=options.triggerGroup;var $canCloseAll=options.canCloseAll;if(options.close==="group"){$tGroup.not($trigger).removeClass(options.isToggled);$group.not(options.accordion).slideUp({duration:options.duration,complete:function(){return $(this).removeClass(options.isOpen)}})}if($canCloseAll==false&&$element.hasClass(options.isOpen)){return}$trigger.toggleClass(options.isToggled);$element.stop(true,true).slideToggle({duration:options.duration,complete:function(){return $element.toggleClass(options.isOpen)}})},normalizeDataAttributes:function(element,options){options.name=options.attrName.replace("data-","")}};$.fn.accordion=function(config){return this.each(function(){if(!$.data(this,"accordion")){var data=$(this).data();var options=$.extend({},data,typeof config==="object"&&config);return $.data(this,"accordion",new Accordion(this,options))}if(config==="toggle"){return $(this).data("accordion").toggle()}})}})(jQuery,window,document);